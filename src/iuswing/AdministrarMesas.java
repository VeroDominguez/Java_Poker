package iuswing;

import dominio.EventoFachada;
import dominio.Fachada;
import dominio.juego.EventoJuego;
import dominio.juego.Mesa;
import dominio.juego.SistemaJuegoException;
import dominio.usuario.UsuarioAdministrador;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utilidades.Observable;
import utilidades.Observador;

public class AdministrarMesas extends javax.swing.JDialog implements Observador {

    private UsuarioAdministrador usuarioAdministrador;

    public AdministrarMesas(java.awt.Frame parent, boolean modal, UsuarioAdministrador usuarioAdministrador) {
        super(parent, modal);
        initComponents();
        this.usuarioAdministrador = usuarioAdministrador;
        Fachada.getInstancia().agregarObservadorSistemaJuego(this);
        //Esto es en caso de que quiera sacar el titulo de Adminsitrar mesas y quiera dejar algo personalizado
        //setTitle("Monitor de "); //+ usuarioAdministrador.getNombreCompleto())
        mostrarTotalRecaudadoEnMesas();
        mostrarTablaMesas();

    }

// //contructor vacio para hacer cargar la ventana en el main
//    public AdministrarMesas()
//    {
//        initComponents();
//        
//        //Esto es en caso de que quiera sacar el titulo de Adminsitrar mesas y quiera dejar algo personalizado
//        //setTitle("Monitor de " + usuarioAdministrador.getNombreCompleto());
//        mostrarTotalRecaudadoEnMesas();
//        mostrarTablaMesas();
//        Fachada.getInstancia().agregarObservadorSistemaJuego(this);
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableMesas = new javax.swing.JTable();
        btnCrearMesa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnVerDetalle = new javax.swing.JButton();
        lblTotalRecaudado = new javax.swing.JLabel();
        txtTotalRecaudado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        tableMesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nº de Mesa", "Jugadores Requeridos", "Apuesta Base en $", "Jugadores Actuales", "Nº de mano Actual", "Total Apostado $", "% de Comisión", "Total Recaudado $", "Estado Actual"
            }
        ));
        jScrollPane1.setViewportView(tableMesas);

        btnCrearMesa.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnCrearMesa.setText("Crear Mesa");
        btnCrearMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearMesaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Administrar mesas");

        btnVerDetalle.setText("Ver detalle de mesa seleccionada");
        btnVerDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerDetalleActionPerformed(evt);
            }
        });

        lblTotalRecaudado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTotalRecaudado.setText("Monto total recaudado:");

        txtTotalRecaudado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTotalRecaudado.setText("$");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(btnCrearMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lblTotalRecaudado, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalRecaudado, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 508, Short.MAX_VALUE)
                        .addComponent(btnVerDetalle)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVerDetalle)
                    .addComponent(lblTotalRecaudado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalRecaudado))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(btnCrearMesa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentAdded

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentHidden

    private void btnCrearMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearMesaActionPerformed
        abrirCrearMesa();
    }//GEN-LAST:event_btnCrearMesaActionPerformed

    private void btnVerDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerDetalleActionPerformed
        detalleMesa();
    }//GEN-LAST:event_btnVerDetalleActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearMesa;
    private javax.swing.JButton btnVerDetalle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotalRecaudado;
    private javax.swing.JTable tableMesas;
    private javax.swing.JLabel txtTotalRecaudado;
    // End of variables declaration//GEN-END:variables

    private void mostrarTotalRecaudadoEnMesas() {
        int totalRecaudado = Fachada.getInstancia().totalRecaudadoMesas();
        txtTotalRecaudado.setText(String.valueOf(totalRecaudado));
    }

    private void mostrarTablaMesas() {
        ArrayList<Mesa> mesas = Fachada.getInstancia().getMesas();

        String[] columnas = {"Nº de mesa", "Jugadores Requeridos", "Apuesta Base en $", "Jugadores Actuales", "Nº de mano Actual", "Total Apostado $", "% de Comisión", "Total Recaudado $", "Estado Actual"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        for (Mesa mesa : mesas) {
            Object[] fila = {mesa.getNumeroMesa(), mesa.getCantidadJugadoresRequerido(), mesa.getApuestaBase(), mesa.getCantidadJugadoresActual(), "Falta mano actual", mesa.getTotalApostadoMesa(), mesa.getPorcentajeComision(), mesa.getRecaudacionTotalMesa(), mesa.getEstadoMesa()};
            modelo.addRow(fila);
        }

        tableMesas.setModel(modelo);
    }

    private void abrirCrearMesa() {
        CrearMesa cm = new CrearMesa(null, false);
        cm.setVisible(true);
    }

    private void detalleMesa() {

        int fila = tableMesas.getSelectedRow();
        if (fila < 0) {
            JOptionPane.showMessageDialog(
                    this,
                    "Debe seleccionar una mesa",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            int idMesaSeleccionada = (int) tableMesas.getModel().getValueAt(fila, 0); //columna 0 porque el nº de mesa esta en la primer columna
            Mesa m = Fachada.getInstancia().unaMesa(idMesaSeleccionada);
            if (m == null) {
                JOptionPane.showMessageDialog(
                        this,
                        "No se encontró la mesa",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                InformacionMesa im = new InformacionMesa(null, false, m);
                im.setVisible(true);
            }
        }
    }

    @Override
    public void actualizar(Observable origen, Object evento) {
        if (evento == EventoJuego.MESA_NUEVA) {
            mostrarTablaMesas();
        }

        if (evento.equals(EventoJuego.MESA_ACTUALIZARJUGADORES)) {
            mostrarTablaMesas();
            mostrarTotalRecaudadoEnMesas();
        }
        if (evento.equals(EventoFachada.MESA_ACTUALIZARJUGADORES)) {
            mostrarTablaMesas();
            mostrarTotalRecaudadoEnMesas();
        }

        if (evento.equals(EventoFachada.MESA_NUEVA)) {
            mostrarTablaMesas();
            mostrarTotalRecaudadoEnMesas();
        }
        if (evento.equals(EventoFachada.MESA_INICIADA)) {
            mostrarTablaMesas();
            mostrarTotalRecaudadoEnMesas();
        }

        if (evento.equals(EventoFachada.MANO_ESPERANDOAPUESTA)) {
            mostrarTotalRecaudadoEnMesas();
        }
        if (evento.equals(EventoFachada.MANO_PIDIENDOCARTAS)) {
            mostrarTotalRecaudadoEnMesas();
        }
        if (evento.equals(EventoFachada.MANO_TERMINADA)) {
            mostrarTotalRecaudadoEnMesas();
        }
        if (evento.equals(EventoFachada.MANO_APUESTAINICIADA)) {
            mostrarTotalRecaudadoEnMesas();
        }

    }

}
