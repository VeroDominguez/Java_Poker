package iuswing;

import dominio.EventoFachada;
import dominio.Fachada;
import dominio.juego.EventoJuego;
import dominio.juego.Mesa;
import dominio.usuario.UsuarioJugador;
import java.util.ArrayList;
import utilidades.Observable;
import utilidades.Observador;

public class VentanaEsperandoInicio extends javax.swing.JDialog implements Observador {

    /**
     * Creates new form VentanaEsperandoInicio
     */
    private UsuarioJugador usuario;
    private Mesa mesa;

    public VentanaEsperandoInicio(java.awt.Frame parent, boolean modal, UsuarioJugador usuario, Mesa mesa) {
        super(parent, modal);
        initComponents();
        this.usuario = usuario;
        this.mesa = mesa;

        mostrarNombreJugadorYMesa();
        mostrarEspera();
        Fachada.getInstancia().agregar(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEsperaInicio = new javax.swing.JLabel();
        txtTitle = new javax.swing.JLabel();
        txtNombreJugador = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtEsperaInicio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtEsperaInicio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtEsperaInicio.setText("Espera inicio");

        txtTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTitle.setText("Iniciando juego");

        txtNombreJugador.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        txtNombreJugador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtNombreJugador.setText("Nombre Jugador + mesa");

        btnSalir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(153, 0, 0));
        btnSalir.setText("Salir de la mesa");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(txtEsperaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(txtNombreJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(btnSalir)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(txtNombreJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(txtEsperaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(btnSalir)
                .addGap(66, 66, 66))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        //Jugador puede salir de la mesa

        salirDeLaMesa();
        this.setVisible(false);
    }//GEN-LAST:event_btnSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel txtEsperaInicio;
    private javax.swing.JLabel txtNombreJugador;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables

    private void mostrarEspera() {
        String cantidadJugadores = "Esperando inicio del juego, hay " + mesa.getCantidadJugadoresActual() + " jugadores de " + mesa.getCantidadJugadoresRequerido() + " en la mesa";
        txtEsperaInicio.setText(cantidadJugadores);
    }

    private void mostrarNombreJugadorYMesa() {
        String jugador = usuario.getNombreCompleto() + " - " + "Mesa: " + mesa.getNumeroMesa();
        txtNombreJugador.setText(jugador);
    }

    //Todo: Verificar si este método va acá o en Sistema juego
    private void salirDeLaMesa() {

        ArrayList<UsuarioJugador> listaJugadoresMesa = mesa.getListaJugadores();
        listaJugadoresMesa.remove(this.usuario);
        mesa.actualizarJugadoresActualesIngreso();
    }

    private void mostrarInterfazDeJuego() {
        PanelCartasPoker panelCartasPoker = new PanelCartasPoker(null, false, usuario, mesa);
        panelCartasPoker.setVisible(true);
//        DialogoEjemplo dialogo = new DialogoEjemplo(null, false, usuario, mesa);
//        dialogo.setVisible(true);
        Fachada.getInstancia().quitar(this);
        this.setVisible(false);

    }

    @Override
    public void actualizar(Observable origen, Object evento) {
        if (evento.equals(EventoJuego.MESA_ACTUALIZARJUGADORES)) {
            mostrarEspera();
        }

        if (evento.equals(EventoFachada.MESA_ACTUALIZARJUGADORES)) {
            mostrarEspera();
        }

        if (evento.equals(EventoJuego.MESA_INICIADA)) {
            mostrarInterfazDeJuego();
        }
        if (evento.equals(EventoFachada.MESA_INICIADA)) {
            mostrarInterfazDeJuego();
        }

    }

}
